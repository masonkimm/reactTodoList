{"version":3,"sources":["components/Todo.js","components/TodoList.js","logo.svg","App.js","index.js"],"names":["Todo","todo","toggleTodo","htmlFor","style","ulStyle","liStyle","type","checked","complete","onChange","id","checkBox","name","fontSize","listStyle","margin","padding","lineHeight","width","fontWeight","background","height","TodoList","todos","map","LOCAL_STORAGE_KEY","App","useState","setTodos","todoNameRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","src","logo","className","alt","divStyle","headingStyle","spanStyle","filter","length","inputStyle","ref","placeholder","submitBtn","onClick","e","todoName","current","value","previousTodos","uuidv4","newTodos","find","clearBtn","textAlign","display","color","boxShadow","outline","backgroundColor","borderRadius","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61fb5b22.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Todo({ todo, toggleTodo }) {\n  function handleTodoClick() {\n    toggleTodo(todo.id);\n  }\n  return (\n    <>\n      <ul htmlFor=\"\" style={ulStyle}>\n        <li style={liStyle}>\n          <input\n            type=\"checkbox\"\n            checked={todo.complete}\n            onChange={handleTodoClick}\n            style={checkBox}\n          />\n          {todo.name}\n        </li>\n      </ul>\n    </>\n  );\n}\n\nconst ulStyle = {\n  fontSize: '1.5rem',\n  listStyle: 'none',\n  margin: '0',\n  padding: '0',\n};\n\nconst liStyle = {\n  lineHeight: '40px',\n  width: '60%',\n  margin: '10px auto',\n  padding: '10px',\n  fontWeight: 'normal',\n  background: 'rgba(20, 97,93,0.2)',\n};\n\nconst checkBox = {\n  width: '1rem',\n  height: '1rem',\n  margin: '0 20px',\n};\n","import React from 'react';\nimport Todo from './Todo';\n\nexport default function TodoList({ todos, toggleTodo }) {\n  return todos.map((todo) => {\n    return <Todo key={todo.id} todo={todo} toggleTodo={toggleTodo} />;\n  });\n}\n","export default __webpack_public_path__ + \"static/media/logo.7949e922.svg\";","import React, { useState, useRef, useEffect } from 'react';\nimport TodoList from './components/TodoList';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\nimport logo from './logo.svg';\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos';\n\nexport default function App() {\n  //empty main array to handle todos\n  const [todos, setTodos] = useState([\n    //prefill data for dev\n    // { id: 1, name: 'Todo1', complete: true },\n  ]);\n  const todoNameRef = useRef();\n  //localStorage>>getItem\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storedTodos) setTodos(storedTodos);\n  }, []);\n  //localStorage>>setItem\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n  //to mark off check box\n  function toggleTodo(id) {\n    const newTodos = [...todos];\n    const todo = newTodos.find((todo) => todo.id === id);\n    todo.complete = !todo.complete;\n    setTodos(newTodos);\n  }\n  //to add new todo\n  function handleAddTodo(e) {\n    //grabbing value of input text\n    let todoName = todoNameRef.current.value;\n    //returns null if input is blank\n    if (todoName === '') return;\n    //storing todos into main array\n    setTodos((previousTodos) => {\n      return [\n        ...previousTodos,\n        { id: uuidv4(), name: todoName, complete: false },\n      ];\n    });\n    //to clear the input field post sumbit\n    todoNameRef.current.value = null;\n  }\n  //to clearTodos\n  function clearCompletedTodos() {\n    const newTodos = todos.filter((todo) => !todo.complete);\n    setTodos(newTodos);\n  }\n  //to render\n  return (\n    <>\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <div className=\"\" style={divStyle}>\n        <h1 style={headingStyle}>Todo-List</h1>\n        <span style={spanStyle}>\n          {todos.filter((todo) => !todo.complete).length} left to do\n        </span>\n        <hr />\n        <input\n          style={inputStyle}\n          ref={todoNameRef}\n          type=\"text\"\n          placeholder=\"Add a todo\"\n        />\n\n        <button style={submitBtn} onClick={handleAddTodo}>\n          Submit\n        </button>\n\n        <br />\n\n        <TodoList todos={todos} toggleTodo={toggleTodo} />\n        <button style={clearBtn} onClick={clearCompletedTodos}>\n          Clear Completed Todos\n        </button>\n      </div>\n    </>\n  );\n}\n//CSS\nconst divStyle = {\n  textAlign: 'center',\n  width: '50%',\n  margin: '160px auto',\n};\n\nconst headingStyle = {\n  fontSize: '4rem',\n};\n\nconst spanStyle = {\n  margin: '30px 0',\n  fontSize: '1.5rem',\n};\n\nconst inputStyle = {\n  width: '40%',\n  display: 'block',\n  margin: '20px auto',\n  padding: '5px 5px 5px 25px',\n  lineHeight: '30px',\n  fontSize: '18px',\n  color: 'white',\n  boxShadow: '0 0 3px',\n  outline: 'none',\n  backgroundColor: 'rgba(0,0,0,0.3)',\n};\n\nconst submitBtn = {\n  backgroundColor: 'green',\n  color: 'white',\n  margin: '0px 10px',\n  fontSize: '18px',\n  lineHeight: '25px',\n  borderRadius: '17px',\n};\nconst clearBtn = {\n  backgroundColor: 'red',\n  color: 'white',\n  margin: '20px 0',\n  fontSize: '18px',\n  lineHeight: '25px',\n  borderRadius: '17px',\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}