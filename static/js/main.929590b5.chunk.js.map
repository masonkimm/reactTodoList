{"version":3,"sources":["components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["Todo","todo","toggleTodo","htmlFor","type","checked","complete","onChange","id","name","TodoList","todos","map","LOCAL_STORAGE_KEY","App","useState","setTodos","todoNameRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","newTodos","find","ref","onClick","e","todoName","current","value","previousTodos","uuidv4","filter","length","ReactDOM","render","document","getElementById"],"mappings":"kKAEe,SAASA,EAAT,GAAqC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WAInC,OACE,8BACE,wBAAOC,QAAQ,GAAf,UACE,uBACEC,KAAK,WACLC,QAASJ,EAAKK,SACdC,SATR,WACEL,EAAWD,EAAKO,OAUXP,EAAKQ,UCXC,SAASC,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,MAAOT,EAAc,EAAdA,WACxC,OAAOS,EAAMC,KAAI,SAACX,GAChB,OAAO,cAACD,EAAD,CAAoBC,KAAMA,EAAMC,WAAYA,GAAjCD,EAAKO,O,YCDrBK,EAAoB,gBAEX,SAASC,IAAM,MAEFC,mBAAS,IAFP,mBAErBJ,EAFqB,KAEdK,EAFc,KAMtBC,EAAcC,mBA0CpB,OAxCAC,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQX,IAChDO,GAAaJ,EAASI,KACzB,IAEHD,qBAAU,WACRI,aAAaE,QAAQZ,EAAmBQ,KAAKK,UAAUf,MACtD,CAACA,IAkCF,qCACE,2CACA,cAACD,EAAD,CAAUC,MAAOA,EAAOT,WAjC5B,SAAoBM,GAClB,IAAMmB,EAAQ,YAAOhB,GACfV,EAAO0B,EAASC,MAAK,SAAC3B,GAAD,OAAUA,EAAKO,KAAOA,KACjDP,EAAKK,UAAYL,EAAKK,SACtBU,EAASW,MA8BP,uBACA,uBAAOE,IAAKZ,EAAab,KAAK,SAC9B,wBAAQ0B,QA5BZ,SAAuBC,GAErB,IAAIC,EAAWf,EAAYgB,QAAQC,MAElB,KAAbF,IAEJhB,GAAS,SAACmB,GACR,MAAM,GAAN,mBACKA,GADL,CAEE,CAAE3B,GAAI4B,cAAU3B,KAAMuB,EAAU1B,UAAU,QAI9CW,EAAYgB,QAAQC,MAAQ,OAe1B,oBACA,wBAAQJ,QAZZ,WACE,IAAMH,EAAWhB,EAAM0B,QAAO,SAACpC,GAAD,OAAWA,EAAKK,YAC9CU,EAASW,IAUP,mCACA,uBACA,iCAAOhB,EAAM0B,QAAO,SAACpC,GAAD,OAAWA,EAAKK,YAAUgC,OAA9C,oBC3DNC,IAASC,OAAO,cAAC1B,EAAD,IAAS2B,SAASC,eAAe,W","file":"static/js/main.929590b5.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Todo({ todo, toggleTodo }) {\n  function handleTodoClick() {\n    toggleTodo(todo.id);\n  }\n  return (\n    <div>\n      <label htmlFor=\"\">\n        <input\n          type=\"checkbox\"\n          checked={todo.complete}\n          onChange={handleTodoClick}\n        />\n        {todo.name}\n        {/* {todo.id} */}\n      </label>\n    </div>\n  );\n}\n","import React from 'react';\nimport Todo from './Todo';\n\nexport default function TodoList({ todos, toggleTodo }) {\n  return todos.map((todo) => {\n    return <Todo key={todo.id} todo={todo} toggleTodo={toggleTodo} />;\n  });\n}\n","import React, { useState, useRef, useEffect } from 'react';\nimport TodoList from './components/TodoList';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos';\n\nexport default function App() {\n  //empty main array to handle todos\n  const [todos, setTodos] = useState([\n    //prefill data for dev\n    // { id: 1, name: 'Todo1', complete: true },\n  ]);\n  const todoNameRef = useRef();\n  //localStorage>>getItem\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storedTodos) setTodos(storedTodos);\n  }, []);\n  //localStorage>>setItem\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  //to mark off check box\n  function toggleTodo(id) {\n    const newTodos = [...todos];\n    const todo = newTodos.find((todo) => todo.id === id);\n    todo.complete = !todo.complete;\n    setTodos(newTodos);\n  }\n\n  //to add new todo\n  function handleAddTodo(e) {\n    //grabbing value of input text\n    let todoName = todoNameRef.current.value;\n    //returns null if input is blank\n    if (todoName === '') return;\n    //storing todos into main array\n    setTodos((previousTodos) => {\n      return [\n        ...previousTodos,\n        { id: uuidv4(), name: todoName, complete: false },\n      ];\n    });\n    //to clear the input field post sumbit\n    todoNameRef.current.value = null;\n  }\n\n  //to clearTodos\n  function clearCompletedTodos() {\n    const newTodos = todos.filter((todo) => !todo.complete);\n    setTodos(newTodos);\n  }\n\n  return (\n    <>\n      <h1>Todo-List</h1>\n      <TodoList todos={todos} toggleTodo={toggleTodo} />\n      <br />\n      <input ref={todoNameRef} type=\"text\" />\n      <button onClick={handleAddTodo}>Submit</button>\n      <button onClick={clearCompletedTodos}>Clear Completed Todos</button>\n      <br />\n      <span>{todos.filter((todo) => !todo.complete).length} left to do</span>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}